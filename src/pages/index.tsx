import { signIn, signOut, useSession } from "next-auth/react";
import Head from "next/head";

import { api } from "@/utils/api";
import { cn } from "@/lib/utils";
import { Button } from "@/components/ui/button";
import { SendMessageForm } from "./_components/SendMessageForm";

export default function Home() {
  const hello = api.post.hello.useQuery({ text: "from tRPC" });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={cn("min-h-screen", "flex flex-col items-center")}>
        <div
          className={cn(
            "container",
            "flex flex-col items-center justify-center",
            "gap-12 px-4 py-16",
          )}
        >
          <h1
            className={cn(
              "text-5xl font-extrabold tracking-tight",
              "sm:text-[5rem]",
            )}
          >
            <span className={cn("text-[hsl(280,100%,70%)]")}>Secret</span> Chat
          </h1>

          <div className="flex flex-col items-center gap-2">
            <p className="text-2xl">
              {hello.data ? hello.data.greeting : "Loading tRPC query..."}
            </p>
            <AuthShowcase />
          </div>
        </div>
      </main>
    </>
  );
}

/**
 * 消息列表
 */
function MessageList() {
  const { data: messages } = api.message.getAllMessages.useQuery();

  return (
    <div>
      {messages?.map((message) => {
        return (
          <div
            key={message.id}
            className={cn("flex items-center justify-center")}
          >
            <div>{message.sender.name}: </div>
            <div>{message.content}</div>
          </div>
        );
      })}
    </div>
  );
}

function AuthShowcase() {
  const { data: sessionData } = useSession();

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      {sessionData && (
        <>
          <p className="text-center text-2xl">
            <span>{sessionData.user?.name}</span>
          </p>

          <MessageList />

          <SendMessageForm />
        </>
      )}

      <Button
        onClick={sessionData ? () => void signOut() : () => void signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </Button>
    </div>
  );
}
